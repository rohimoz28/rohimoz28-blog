<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Odoo on Rohimoz28</title>
    <link>https://rohimoz28.github.io/tags/odoo/</link>
    <description>Recent content in Odoo on Rohimoz28</description>
    <generator>Hugo -- 0.126.2</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Feb 2025 15:32:40 +0700</lastBuildDate>
    <atom:link href="https://rohimoz28.github.io/tags/odoo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Konfigurasi Dasar CI/CD Gitlab</title>
      <link>https://rohimoz28.github.io/blog/konfigurasi-dasar-cicd-gitlab/</link>
      <pubDate>Thu, 20 Feb 2025 15:32:40 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/konfigurasi-dasar-cicd-gitlab/</guid>
      <description>Berikut ini adalah konfigurasi dasar file gitlab-ci.yml yang digunakan untuk CI/CD pada Gitlab.</description>
    </item>
    <item>
      <title>Cara Backup Odoo Dan Postgresql</title>
      <link>https://rohimoz28.github.io/blog/cara-manual-backup-odoo/</link>
      <pubDate>Sat, 25 Jan 2025 19:55:30 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/cara-manual-backup-odoo/</guid>
      <description>Jika Backup Odoo Melalui Front End Sudah Tidak Bisa Di Lakukan. Mungkin Backup Manual Postgresql dan Odoo Filestore Bisa Menjadi Opsi.</description>
    </item>
    <item>
      <title>Cara Debug Odoo Di Docker Menggunakan Pdb</title>
      <link>https://rohimoz28.github.io/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</link>
      <pubDate>Mon, 16 Dec 2024 13:27:39 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</guid>
      <description>Latar Belakang Masalah Untuk melakukan debugging di odoo, ada beberapa cara. Yang paling direkomendasikan adalah menggunakan python package pdb. Sayangnya, ketika develop Odoo menggunakan docker. Perlu ada konfigurasi khusus agar kita bisa menggunakan package tersebut.
Dalam praktik kali ini saya mengasumsikan teman-teman sudah menginstall odoo menggunakan docker. Kali ini, kita akan menggunakan VSCode sebagai text editor.
Ada dua cara untuk melakukan debugging saat develop menggunakan docker.
1. Menggunakan Metode Attach Container Baik digunakan di local development environment.</description>
    </item>
    <item>
      <title>Cara Menyimpan Query SQL Pada Modul Odoo</title>
      <link>https://rohimoz28.github.io/blog/cara-menyimpan-query-sql-pada-module-odoo/</link>
      <pubDate>Tue, 26 Nov 2024 18:41:16 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/cara-menyimpan-query-sql-pada-module-odoo/</guid>
      <description>Masalahnya, praktik meletakkan query procedure PostgreSQL langsung di database lalu memanggilnya dengan function execute di kode python merupakan hal yang buruk ketika procedure tersebut dikerjakan oleh beberapa orang.
Sayangnya, ketika banyak orang mengerjakan query procedure langsung di database, bisa mengakibatkan inkonsistensi kode.
Untuk itu, diperlukan suatu cara untuk mensinkronkan query sql yang di kerjakan di dalam team.
Buat Folder db Pertama, kita buat folder baru didalam modul kustom kita dengan nama db.</description>
    </item>
    <item>
      <title>Docker Multi Instance Odoo</title>
      <link>https://rohimoz28.github.io/blog/install-multi-odoo-instance-menggunakan-docker/</link>
      <pubDate>Sun, 29 Sep 2024 19:03:00 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/install-multi-odoo-instance-menggunakan-docker/</guid>
      <description>tutorial dan cara install banyak odoo instance dengan docker</description>
    </item>
    <item>
      <title>Install Odoo 17 Menggunakan Docker</title>
      <link>https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/</link>
      <pubDate>Sun, 29 Sep 2024 18:41:16 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/</guid>
      <description>Tulisan ini akan menunjukkan cara meng-install Odoo dan Postgresql menggunakan Docker. Sebelum mengikuti tutorial ini, penulis asumsikan bahwa kamu sudah meng-install Docker di sistem operasi kalian. Jika belum, silahkan ikuti Tutorial Install Docker dari laman resminya.
Untuk tuorial kali ini, akan menggunakan source code dari repository github saya. Silahkan di fork atau di clone di lokal kalian.
Struktur Folder Masuk ke folder yang baru di clone, maka kalian akan menemukan 2 folder.</description>
    </item>
    <item>
      <title>Override ir.model.access.csv</title>
      <link>https://rohimoz28.github.io/blog/override-ir-model-access-csv/</link>
      <pubDate>Mon, 29 Jul 2024 18:41:16 +0700</pubDate>
      <guid>https://rohimoz28.github.io/blog/override-ir-model-access-csv/</guid>
      <description>Latar Belakang Masalah Biasanya, ketika kita meng-install module odoo dari third party, sudah otomatis ada pengaturan ir.model.access.csv bawaan modul tersebut. Ada kalanya, kita ingin menyesuaikan hak akses tersebut dengan kebutuhan di modul kustomisasi kita.
Solusi Maka dari itu, kita perlu melakukan override hak akses yg ada di ir.model.access.csv.
Override ir.model.access.csv Dibawah ini adalah contoh hak akses di ir.model.access.csv yang ingin kita override.
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlinkaccess_hr_holidays_status_manager,hr.holidays.status manager,model_hr_leave_type,hr_holidays.group_hr_holidays_manager,1,1,1,1 Untuk meng-override nya, silahkan buka file ir.</description>
    </item>
  </channel>
</rss>
