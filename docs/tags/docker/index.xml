<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Docker on Rohimoz28</title><link>https://rohimoz28.github.io:34027/tags/docker/</link><description>Recent content in Docker on Rohimoz28</description><generator>Hugo -- 0.139.4</generator><language>en-us</language><lastBuildDate>Mon, 16 Dec 2024 15:59:16 +0700</lastBuildDate><atom:link href="https://rohimoz28.github.io:34027/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Cara Debug Odoo Di Docker Menggunakan Pdb</title><link>https://rohimoz28.github.io:34027/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</link><pubDate>Mon, 16 Dec 2024 13:27:39 +0700</pubDate><guid>https://rohimoz28.github.io:34027/blog/cara-debug-odoo-di-docker-menggunakan-pdb/</guid><description>&lt;h2 id="latar-belakang-masalah">Latar Belakang Masalah&lt;/h2>
&lt;p>Untuk melakukan debugging di odoo, ada beberapa cara. Yang paling direkomendasikan adalah
menggunakan python package &lt;code>pdb&lt;/code>.
Sayangnya, ketika develop Odoo menggunakan docker. Perlu ada konfigurasi khusus agar kita bisa menggunakan
package tersebut.&lt;/p>
&lt;p>Dalam praktik kali ini saya mengasumsikan teman-teman sudah &lt;a href="https://rohimoz28.github.io/blog/install-odoo-menggunakan-docker/">menginstall odoo menggunakan docker&lt;/a>.
Kali ini, kita akan menggunakan VSCode sebagai text editor.&lt;/p>
&lt;p>Ada dua cara untuk melakukan debugging saat develop menggunakan docker.&lt;/p>
&lt;h2 id="1-menggunakan-metode-attach-container">1. Menggunakan Metode Attach Container&lt;/h2>
&lt;p>&lt;strong>Baik digunakan&lt;/strong> di local development environment. &lt;br>
Karena tidak akan mengganggu STDIN dari program dan bisa melalui remote debugging.
Tambahkan kedua line dibawah ini pada pengaturan &lt;code>docker-compose.yaml&lt;/code>.&lt;/p></description></item><item><title>Docker Multi Instance Odoo</title><link>https://rohimoz28.github.io:34027/blog/install-multi-odoo-instance-menggunakan-docker/</link><pubDate>Sun, 29 Sep 2024 19:03:00 +0700</pubDate><guid>https://rohimoz28.github.io:34027/blog/install-multi-odoo-instance-menggunakan-docker/</guid><description>tutorial dan cara install banyak odoo instance dengan docker</description></item><item><title>Install Odoo 17 Menggunakan Docker</title><link>https://rohimoz28.github.io:34027/blog/install-odoo-menggunakan-docker/</link><pubDate>Sun, 29 Sep 2024 18:41:16 +0700</pubDate><guid>https://rohimoz28.github.io:34027/blog/install-odoo-menggunakan-docker/</guid><description>&lt;p>Tulisan ini akan menunjukkan cara meng-install Odoo dan Postgresql menggunakan Docker.
Sebelum mengikuti tutorial ini, penulis asumsikan bahwa kamu sudah meng-install Docker di sistem operasi kalian.
Jika belum, silahkan ikuti &lt;a href="%5Bhttps://%5D(https://docs.docker.com/engine/install/)">Tutorial Install Docker&lt;/a> dari laman resminya.&lt;/p>
&lt;p>Untuk tuorial kali ini, akan menggunakan source code dari &lt;a href="https://github.com/rohimoz28/odoo-docker">repository&lt;/a>
github saya. Silahkan di fork atau di clone di lokal kalian.&lt;/p>
&lt;h2 id="struktur-folder">Struktur Folder&lt;/h2>
&lt;p>Masuk ke folder yang baru di clone, maka kalian akan menemukan 2 folder. &lt;code>conf&lt;/code> &lt;code>customize&lt;/code>.
Struktur folder kalian akan tampak seperti ini:
&lt;img loading="lazy" src="images/struktur-direktori.jpg" alt="struktur-direktori" />
&lt;/p></description></item><item><title>Relokasi Docker</title><link>https://rohimoz28.github.io:34027/blog/relokasi-docker/</link><pubDate>Thu, 29 Aug 2024 18:41:16 +0700</pubDate><guid>https://rohimoz28.github.io:34027/blog/relokasi-docker/</guid><description>&lt;h3 id="latar-belakang-masalah">Latar Belakang Masalah&lt;/h3>
&lt;p>Secara default, direktori docker terletak pada &lt;code>/var/lib/docker&lt;/code>. Ada kalanya, ketika docker image , volume dan container sudah terlalu besar sehingga memakan storage. Kita ingin memindahkan letak direktori docker ini agar tidak memakan storage &lt;code>root&lt;/code> kita yang pada akhirnya akan menghentikan service docker itu sendiri.&lt;/p>
&lt;h3 id="solusi">Solusi&lt;/h3>
&lt;p>Maka dari itu, kita perlu merelokasi direktori default docker ini ke partisi lain yang memiliki kapasitas lebih besar daripada partisi &lt;code>root&lt;/code>.&lt;/p>
&lt;h3 id="persiapan">Persiapan&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>stop semua docker yang sedang berjalan&lt;/p></description></item></channel></rss>